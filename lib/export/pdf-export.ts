// PDF Export with AJ STUDIOZ Branding - Client-side only
'use client';

export type ExportOptions = {
  title: string;
  content: string;
  author?: string;
  date?: Date;
};

export async function exportToPDF(options: ExportOptions): Promise<void> {
  // Dynamic import to avoid SSR issues
  const { jsPDF } = await import('jspdf');
  
  const doc = createPDFDocument(options, jsPDF);
  const filename = `${options.title.replace(/[^a-z0-9]/gi, '_').toLowerCase()}_${Date.now()}.pdf`;
  doc.save(filename);
}

function createPDFDocument(options: ExportOptions, jsPDF: any): any {
  const { title, content, author = 'AJ STUDIOZ', date = new Date() } = options;
  
  const doc = new jsPDF({
    orientation: 'portrait',
    unit: 'mm',
    format: 'a4',
  });

  const pageWidth = doc.internal.pageSize.getWidth();
  const pageHeight = doc.internal.pageSize.getHeight();
  const margin = 20;
  const contentWidth = pageWidth - 2 * margin;
  
  let yPosition = margin;

  // Header with AJ STUDIOZ branding
  doc.setFillColor(37, 99, 235); // Blue color
  doc.rect(0, 0, pageWidth, 30, 'F');
  
  doc.setTextColor(255, 255, 255);
  doc.setFontSize(20);
  doc.setFont('helvetica', 'bold');
  doc.text('AJ STUDIOZ', margin, 15);
  
  doc.setFontSize(10);
  doc.setFont('helvetica', 'normal');
  doc.text('Student Learning Assistant', margin, 22);
  
  yPosition = 40;

  // Document Title
  doc.setTextColor(0, 0, 0);
  doc.setFontSize(18);
  doc.setFont('helvetica', 'bold');
  const titleLines = doc.splitTextToSize(title, contentWidth);
  doc.text(titleLines, margin, yPosition);
  yPosition += titleLines.length * 8 + 5;

  // Date
  doc.setFontSize(10);
  doc.setFont('helvetica', 'normal');
  doc.setTextColor(100, 100, 100);
  doc.text(`Generated: ${date.toLocaleDateString()} ${date.toLocaleTimeString()}`, margin, yPosition);
  yPosition += 10;

  // Separator line
  doc.setDrawColor(200, 200, 200);
  doc.line(margin, yPosition, pageWidth - margin, yPosition);
  yPosition += 10;

  // Content
  doc.setFontSize(11);
  doc.setFont('helvetica', 'normal');
  doc.setTextColor(0, 0, 0);
  
  // Process content (handle markdown-like formatting)
  const lines = content.split('\n');
  
  for (const line of lines) {
    // Check if we need a new page
    if (yPosition > pageHeight - 30) {
      addFooter(doc, pageWidth, pageHeight);
      doc.addPage();
      yPosition = margin;
    }

    if (line.trim() === '') {
      yPosition += 5;
      continue;
    }

    // Handle headers
    if (line.startsWith('# ')) {
      doc.setFontSize(16);
      doc.setFont('helvetica', 'bold');
      const text = line.substring(2);
      const textLines = doc.splitTextToSize(text, contentWidth);
      doc.text(textLines, margin, yPosition);
      yPosition += textLines.length * 8 + 3;
      doc.setFontSize(11);
      doc.setFont('helvetica', 'normal');
    } else if (line.startsWith('## ')) {
      doc.setFontSize(14);
      doc.setFont('helvetica', 'bold');
      const text = line.substring(3);
      const textLines = doc.splitTextToSize(text, contentWidth);
      doc.text(textLines, margin, yPosition);
      yPosition += textLines.length * 7 + 2;
      doc.setFontSize(11);
      doc.setFont('helvetica', 'normal');
    } else if (line.startsWith('### ')) {
      doc.setFontSize(12);
      doc.setFont('helvetica', 'bold');
      const text = line.substring(4);
      const textLines = doc.splitTextToSize(text, contentWidth);
      doc.text(textLines, margin, yPosition);
      yPosition += textLines.length * 6 + 2;
      doc.setFontSize(11);
      doc.setFont('helvetica', 'normal');
    } else if (line.startsWith('- ') || line.startsWith('* ')) {
      const text = 'â€¢ ' + line.substring(2);
      const textLines = doc.splitTextToSize(text, contentWidth - 5);
      doc.text(textLines, margin + 5, yPosition);
      yPosition += textLines.length * 6;
    } else if (/^\d+\.\s/.test(line)) {
      const textLines = doc.splitTextToSize(line, contentWidth - 5);
      doc.text(textLines, margin + 5, yPosition);
      yPosition += textLines.length * 6;
    } else {
      // Regular text
      const textLines = doc.splitTextToSize(line, contentWidth);
      doc.text(textLines, margin, yPosition);
      yPosition += textLines.length * 6;
    }
  }

  // Add footer to last page
  addFooter(doc, pageWidth, pageHeight);

  return doc;
}

function addFooter(doc: any, pageWidth: number, pageHeight: number): void {
  const footerY = pageHeight - 15;
  
  // Watermark
  doc.setFontSize(8);
  doc.setTextColor(150, 150, 150);
  doc.setFont('helvetica', 'italic');
  doc.text('Generated by AJ STUDIOZ - Student Learning Platform', pageWidth / 2, footerY, { align: 'center' });
  
  // Page number
  doc.setFont('helvetica', 'normal');
  const pageNum = doc.getCurrentPageInfo().pageNumber;
  doc.text(`Page ${pageNum}`, pageWidth - 20, footerY, { align: 'right' });
  
  // Watermark diagonal text
  doc.setFontSize(40);
  doc.setTextColor(240, 240, 240);
  doc.setFont('helvetica', 'bold');
  doc.text('AJ STUDIOZ', pageWidth / 2, pageHeight / 2, {
    align: 'center',
    angle: 45,
  });
}
